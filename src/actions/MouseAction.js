'use strict';

const CLICK 				= 'click';
const DOUBLE_CLICK 	= 'doubleClick';
const MOUSE_DOWN 		= 'mouseDown';
const MOUSE_ENTER 	= 'mouseEnter';
const MOUSE_LEAVE 	= 'mouseLeave';
const MOUSE_MOVE 		= 'mouseMove';
const MOUSE_OVER 		= 'mouseOver';
const MOUSE_OUT 		= 'mouseOut';
const MOUSE_UP 			= 'mouseUp';
const WHEEL 				= 'mouseWheel';

/**
 * A MouseAction object is dispatched into the event flow whenever mouse actions
 * occur. A mouse action is usually generated by a user input device, such as a
 * mouse, that uses a pointer.
 *
 * TODO: nested nodes
 *
 * @param {type} The type of the action, accessible as MouseAction.type.
 */

class MouseAction {
  constructor(type) {
    this.type = type;
  }

	static get CLICK() 				{ return CLICK;				 }
	static get DOUBLE_CLICK() { return DOUBLE_CLICK; }
	static get MOUSE_DOWN() 	{ return MOUSE_DOWN;	 }
	static get MOUSE_ENTER() 	{ return MOUSE_ENTER;	 }
	static get MOUSE_LEAVE() 	{ return MOUSE_LEAVE;	 }
	static get MOUSE_MOVE() 	{ return MOUSE_MOVE;	 }
	static get MOUSE_OVER() 	{ return MOUSE_OVER;	 }
	static get MOUSE_OUT() 		{ return MOUSE_OUT;		 }
	static get MOUSE_UP() 		{ return MOUSE_UP;		 }
	static get WHEEL() 				{ return WHEEL;				 }
}

export default MouseAction;
